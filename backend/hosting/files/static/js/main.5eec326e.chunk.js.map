{"version":3,"sources":["components/RealmApp.js","components/AppName.js","components/MoreInfo.js","utils.js","hooks/useErrorAlert.js","components/WelcomePage.js","hooks/useWatch.js","hooks/useTodos_mql.js","hooks/useCollection.js","components/TodoItem.js","components/DraftTodoItem.js","hooks/util-hooks.js","components/TodoItemsPage.js","hooks/useDraftTodos.js","colors.js","components/Theme.js","components/App.js","reportWebVitals.js","index.js"],"names":["createRealmApp","id","Realm","baseUrl","RealmAppContext","React","createContext","RealmAppProvider","appId","children","useState","realmApp","setRealmApp","useEffect","currentUser","setCurrentUser","logIn","useCallback","credentials","a","logOut","removeUser","realmAppContext","useMemo","Provider","value","useRealmApp","useContext","Error","API_TYPE_NAME","AppName","Typography","className","component","variant","MoreInfo","MoreInfoTemplateAndDocs","MoreInfoItem","Container","style","textAlign","padding","marginTop","Link","target","href","pathAddition","baseUrlPath","URL","pathname","fullPath","path","join","appendUrlPath","appUrl","toggleBoolean","prev","isValidArrayIndex","arr","idx","length","getTodoIndex","todos","todo","findIndex","t","todo1","todo2","String","_id","Alert","props","elevation","ErrorAlert","isOpen","message","onClose","severity","WelcomePage","isSignup","setIsSignup","noErrors","email","password","other","error","setError","clearErrors","NonAuthErrorAlert","clearError","hideAfterMs","showErrorAlert","setShowErrorAlert","clearErrorAlert","timeout","setTimeout","clearTimeout","useErrorAlert","prevError","showPassword","setShowPassword","onFormSubmit","emailPasswordAuth","registerUser","emailPassword","handleAuthenticationError","maxWidth","Card","onSubmit","e","preventDefault","formData","FormData","Object","fromEntries","entries","gutterBottom","TextField","name","label","Boolean","helperText","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","Button","color","err","handleUnknownError","console","warn","statusCode","noop","defaultChangeHandlers","onInsert","onUpdate","onReplace","onDelete","useTodos","setTodos","loading","setLoading","taskCollection","cluster","db","collection","mongoClient","useCollection","dataSourceName","find","then","fetchedTodos","changeHandlers","filter","handlers","handlersRef","useRef","current","watchTodos","watch","change","operationType","useWatch","oldTodos","fullDocument","slice","addValueAtIndex","updater","updateValueAtIndex","newValue","replaceValueAtIndex","documentKey","removeValueAtIndex","saveTodo","draftTodo","summary","_partition","insertOne","match","toggleTodo","updateOne","$set","isComplete","deleteTodo","deleteOne","TodoItem","todoActions","ListItem","ListItemIcon","Checkbox","edge","checked","ListItemText","ListItemSecondaryAction","size","ListItemWithTwoSecondaryActions","withStyles","secondaryAction","paddingRight","DraftTodoItem","draftTodoActions","inset","width","placeholder","onChange","setDraftTodoSummary","deleteDraftTodo","useShowLoader","delayMs","fn","ms","showLoader","setShowLoader","TodoItemsPage","drafts","setDrafts","draftTodos","createDraftTodo","ObjectID","d","draft","oldDrafts","useDraftTodos","LinearProgress","startIcon","List","map","colors","green","A400","purple","orange","red","themeConfig","palette","primary","secondary","theme","createMuiTheme","ThemeProvider","AppWithRealm","App","AppBar","Toolbar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5eec326e.chunk.js","sourcesContent":["import React from \"react\";\nimport * as Realm from \"realm-web\";\nimport { baseUrl } from \"../realm.json\";\n\nfunction createRealmApp(id) {\n  return new Realm.App({ id, baseUrl });\n}\n\nconst RealmAppContext = React.createContext(null);\n\nexport function RealmAppProvider({ appId, children }) {\n  // Store Realm.App in React state. If appId changes, all children will rerender and use the new realmApp.\n  const [realmApp, setRealmApp] = React.useState(createRealmApp(appId));\n  React.useEffect(() => {\n    setRealmApp(createRealmApp(appId));\n  }, [appId]);\n  // Store the app's current user in state and wrap the built-in auth functions to modify this state\n  const [currentUser, setCurrentUser] = React.useState(realmApp.currentUser);\n  // Wrap the base logIn function to save the logged in user in state\n  const logIn = React.useCallback(\n    async (credentials) => {\n      await realmApp.logIn(credentials);\n      setCurrentUser(realmApp.currentUser);\n    },\n    [realmApp]\n  );\n  // Wrap the current user's logOut function to remove the logged out user from state\n  const logOut = React.useCallback(async () => {\n    await currentUser?.logOut();\n    await realmApp.removeUser(currentUser);\n    setCurrentUser(realmApp.currentUser);\n  }, [realmApp, currentUser]);\n\n  // Override the App's currentUser & logIn properties + include the app-level logout function\n  const realmAppContext = React.useMemo(() => {\n    return { ...realmApp, currentUser, logIn, logOut };\n  }, [realmApp, currentUser, logIn, logOut]);\n\n  return (\n    <RealmAppContext.Provider value={realmAppContext}>\n      {children}\n    </RealmAppContext.Provider>\n  );\n}\n\nexport function useRealmApp() {\n  const realmApp = React.useContext(RealmAppContext);\n  if (!realmApp) {\n    throw new Error(\n      `No Realm App found. Make sure to call useRealmApp() inside of a <RealmAppProvider />.`\n    );\n  }\n  return realmApp;\n}\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nexport const API_TYPE_NAME = \"MQL\"\n\nexport function AppName() {\n  return (\n    <Typography className=\"app-bar-title\" component=\"h1\" variant=\"h5\">\n      My {API_TYPE_NAME} App\n    </Typography>\n  );\n}\n","import path from \"path\";\nimport { Container, Link } from \"@material-ui/core\";\nimport { API_TYPE_NAME } from \"./AppName\";\nimport { appUrl } from \"../realm.json\";\n\nexport function MoreInfo() {\n  return (\n    <>\n      {API_TYPE_NAME === \"GraphQL\" ? <MoreInfoGraphiQL /> : null}\n      <MoreInfoTemplateAndDocs />\n    </>\n  );\n}\n\nfunction MoreInfoItem({ children }) {\n  return (\n    <Container\n      style={{ textAlign: \"center\", padding: \"14px 0\", marginTop: \"auto\" }}\n    >\n      {children}\n    </Container>\n  );\n}\n\nexport function MoreInfoTemplateAndDocs() {\n  return (\n    <MoreInfoItem>\n      <span>Built with the MongoDB Realm {API_TYPE_NAME} Template</span> |{\" \"}\n      <Link target=\"_blank\" href=\"https://docs.mongodb.com/realm\">\n        Docs\n      </Link>\n    </MoreInfoItem>\n  );\n}\n\nfunction appendUrlPath(baseUrl, pathAddition) {\n  // \"new URL\" overrides any existing path, so we need to work around it\n  const baseUrlPath = new URL(baseUrl).pathname;\n  const fullPath = path.join(baseUrlPath, pathAddition);\n  return new URL(fullPath, baseUrl).href;\n}\n\nconst graphiqlUrl = appendUrlPath(appUrl, \"/graphql/explore\");\n\nfunction MoreInfoGraphiQL() {\n  return (\n    <MoreInfoItem>\n      <span>\n        Try some queries in the{\" \"}\n        <Link target=\"_blank\" href={graphiqlUrl}>\n          GraphiQL Explorer\n        </Link>\n      </span>\n    </MoreInfoItem>\n  );\n}\n","export const toggleBoolean = (prev) => !prev;\n\nconst isValidArrayIndex = (arr, idx) => {\n  return !(idx < 0 || idx >= arr.length);\n};\n\nexport function addValueAtIndex(arr, idx, value) {\n  if (!isValidArrayIndex(arr, idx) && idx !== arr.length) {\n    throw new Error(`Cannot add value. Array index out of bounds.`);\n  }\n  return [...arr.slice(0, idx), value, ...arr.slice(idx)];\n}\n\nexport function replaceValueAtIndex(arr, idx, newValue) {\n  if (!isValidArrayIndex(arr, idx)) {\n    throw new Error(`Cannot replace value. Array index out of bounds.`);\n  }\n  return [...arr.slice(0, idx), newValue, ...arr.slice(idx + 1)];\n}\n\nexport function updateValueAtIndex(arr, idx, updater) {\n  if (!isValidArrayIndex(arr, idx)) {\n    throw new Error(`Cannot update value. Array index out of bounds.`);\n  }\n  return [...arr.slice(0, idx), updater(arr[idx]), ...arr.slice(idx + 1)];\n}\n\nexport function removeValueAtIndex(arr, idx) {\n  if (!isValidArrayIndex(arr, idx)) {\n    throw new Error(`Cannot remove value. Array index out of bounds.`);\n  }\n  return [...arr.slice(0, idx), ...arr.slice(idx + 1)];\n}\n\nexport const isSameTodo = (todo1, todo2) =>\n  String(todo1?._id) === String(todo2?._id);\n\nexport const getTodoIndex = (todos, todo) => {\n  const idx = todos.findIndex((t) => isSameTodo(t, todo));\n  return idx >= 0 ? idx : null;\n};\n","import React from \"react\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport function ErrorAlert({ isOpen, message, onClose = () => {} }) {\n  return isOpen ? (\n    <Alert onClose={onClose} severity=\"error\">\n      {message}\n    </Alert>\n  ) : null;\n}\n\nexport function useErrorAlert({ error, clearError, hideAfterMs }) {\n  const [showErrorAlert, setShowErrorAlert] = React.useState(false);\n  const clearErrorAlert = React.useCallback(() => {\n    clearError();\n    setShowErrorAlert(false);\n  }, [clearError]);\n\n  React.useEffect(() => {\n    if (error) {\n      setShowErrorAlert(true);\n      if (hideAfterMs) {\n        const timeout = setTimeout(() => {\n          clearErrorAlert();\n        }, hideAfterMs);\n        return () => {\n          clearTimeout(timeout);\n        };\n      }\n    } else {\n      setShowErrorAlert(false);\n    }\n  }, [error, clearErrorAlert, hideAfterMs]);\n\n  return () => (\n    <ErrorAlert\n      isOpen={showErrorAlert}\n      message={error}\n      onClose={() => {\n        clearErrorAlert();\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport * as Realm from \"realm-web\";\nimport {\n  Container,\n  TextField,\n  Button,\n  IconButton,\n  Card,\n  Typography,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport { useRealmApp } from \"./RealmApp\";\nimport { MoreInfoTemplateAndDocs } from \"./MoreInfo\";\nimport { toggleBoolean } from \"../utils\";\nimport { useErrorAlert } from \"../hooks/useErrorAlert\";\n\nexport function WelcomePage() {\n  const realmApp = useRealmApp();\n  // Track whether the user is logging in or signing up for a new account\n  const [isSignup, setIsSignup] = React.useState(false);\n  const toggleIsSignup = () => {\n    clearErrors();\n    setIsSignup(toggleBoolean);\n  };\n  // Authentication errors\n  const noErrors = {\n    email: null,\n    password: null,\n    other: null,\n  };\n  const [error, setError] = React.useState(noErrors);\n  const clearErrors = () => setError(noErrors);\n  const NonAuthErrorAlert = useErrorAlert({\n    error: error.other,\n    clearError: () => {\n      setError((prevError) => ({ ...prevError, other: null }));\n    },\n  });\n  // Manage password visibility\n  const [showPassword, setShowPassword] = React.useState(false);\n  const toggleShowPassword = () => setShowPassword(toggleBoolean);\n\n  const onFormSubmit = async ({ email, password }) => {\n    clearErrors();\n    try {\n      if (isSignup) {\n        await realmApp.emailPasswordAuth.registerUser(email, password);\n      }\n      await realmApp.logIn(Realm.Credentials.emailPassword(email, password));\n    } catch (err) {\n      handleAuthenticationError(err, setError);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\" className=\"main-container\">\n      <Card className=\"auth-card\" variant=\"outlined\">\n        <form\n          className=\"auth-form\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            const formData = new FormData(e.target);\n            const { email, password } = Object.fromEntries(formData.entries());\n            onFormSubmit({ email, password });\n          }}\n        >\n          <Typography component=\"h2\" variant=\"h4\" gutterBottom>\n            {isSignup ? \"Sign Up\" : \"Log In\"}\n          </Typography>\n          <NonAuthErrorAlert />\n          <TextField\n            id=\"input-email\"\n            name=\"email\"\n            label=\"Email Address\"\n            variant=\"outlined\"\n            error={Boolean(error.email)}\n            helperText={error.email ?? \"\"}\n          />\n          <TextField\n            id=\"input-password\"\n            type={showPassword ? \"text\" : \"password\"}\n            name=\"password\"\n            label=\"Password\"\n            variant=\"outlined\"\n            error={Boolean(error.password)}\n            helperText={error.password ?? \"\"}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={toggleShowPassword}\n                    onMouseDown={(e) => {\n                      e.preventDefault();\n                    }}\n                  >\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            {isSignup ? \"Create Account\" : \"Log In\"}\n          </Button>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => toggleIsSignup()}\n          >\n            {isSignup\n              ? \"Already have an account? Log In\"\n              : \"Sign up for an account\"}\n          </button>\n        </form>\n      </Card>\n      <MoreInfoTemplateAndDocs />\n    </Container>\n  );\n}\n\nfunction handleAuthenticationError(err, setError) {\n  const handleUnknownError = () => {\n    setError((prevError) => ({\n      ...prevError,\n      other: \"Something went wrong. Try again in a little bit.\",\n    }));\n    console.warn(\n      \"Something went wrong with a Realm login or signup request. See the following error for details.\"\n    );\n    console.error(err);\n  };\n  if (err instanceof Realm.MongoDBRealmError) {\n    const { error, statusCode } = err;\n    const errorType = error || statusCode;\n    switch (errorType) {\n      case \"invalid username\":\n        setError((prevError) => ({\n          ...prevError,\n          email: \"Invalid email address.\",\n        }));\n        break;\n      case \"invalid username/password\":\n      case \"invalid password\":\n      case 401:\n        setError((prevError) => ({\n          ...prevError,\n          password: \"Incorrect password.\",\n        }));\n        break;\n      case \"name already in use\":\n      case 409:\n        setError((prevError) => ({\n          ...prevError,\n          email: \"Email is already registered.\",\n        }));\n        break;\n      case \"password must be between 6 and 128 characters\":\n      case 400:\n        setError((prevError) => ({\n          ...prevError,\n          password: \"Password must be between 6 and 128 characters.\",\n        }));\n        break;\n      default:\n        handleUnknownError();\n        break;\n    }\n  } else {\n    handleUnknownError();\n  }\n}\n","import React from \"react\";\n\n// By default we won't do anything for a change event unless the caller passed in a change handler\n// for the change event type.\nconst noop = () => {};\nconst defaultChangeHandlers = {\n  onInsert: noop,\n  onUpdate: noop,\n  onReplace: noop,\n  onDelete: noop,\n};\n\n/**\n * Opens/manages a change stream and calls provided change handlers for a given MongoDB collection.\n * @param {Realm.Services.MongoDB.MongoDBCollection<T>} collection - A MongoDB collection client object.\n * @param {Object} changeHandlers - A set of callback functions to call in response to changes.\n * @param {(change: Realm.Services.MongoDB.InsertEvent<T>) => void} [changeHandlers.onInsert] - A change handler callback that receives an Insert event.\n * @param {(change: Realm.Services.MongoDB.UpdateEvent<T>) => void} [changeHandlers.onUpdate] - A change handler callback that receives an Update event.\n * @param {(change: Realm.Services.MongoDB.ReplaceEvent<T>) => void} [changeHandlers.onReplace] - A change handler callback that receives a Replace event.\n * @param {(change: Realm.Services.MongoDB.DeleteEvent<T>) => void} [changeHandlers.onDelete] - A change handler callback that receives a Delete event.\n */\nexport function useWatch(collection, changeHandlers) {\n  const filter = React.useMemo(() => ({}), []);\n  const handlers = { ...defaultChangeHandlers, ...changeHandlers };\n  // We copy the handlers into a ref so that we can always call the latest version of each handler\n  // without causing a re-render when the callbacks change. This can prevent infinite render loops\n  // that would otherwise happen if the caller doesn't memoize their change handler functions.\n  const handlersRef = React.useRef(handlers);\n  React.useEffect(() => {\n    handlersRef.current = {\n      onInsert: handlers.onInsert,\n      onUpdate: handlers.onUpdate,\n      onReplace: handlers.onReplace,\n      onDelete: handlers.onDelete,\n    };\n  }, [\n    handlers.onInsert,\n    handlers.onUpdate,\n    handlers.onReplace,\n    handlers.onDelete,\n  ]);\n  // Set up a MongoDB change stream that calls the provided change handler callbacks.\n  React.useEffect(() => {\n    const watchTodos = async () => {\n      for await (const change of collection.watch({ filter })) {\n        switch (change.operationType) {\n          case \"insert\": {\n            handlersRef.current.onInsert(change);\n            break;\n          }\n          case \"update\": {\n            handlersRef.current.onUpdate(change);\n            break;\n          }\n          case \"replace\": {\n            handlersRef.current.onReplace(change);\n            break;\n          }\n          case \"delete\": {\n            handlersRef.current.onDelete(change);\n            break;\n          }\n          default: {\n            // change.operationType will always be one of the specified cases, so we should never hit this default\n            throw new Error(\n              `Invalid change operation type: ${change.operationType}`\n            );\n          }\n        }\n      }\n    };\n    watchTodos();\n  }, [collection, filter]);\n}\n","import React from \"react\";\nimport { useWatch } from \"./useWatch\";\nimport { useCollection } from \"./useCollection\";\nimport { useRealmApp } from \"../components/RealmApp\";\nimport { dataSourceName } from \"../realm.json\";\nimport {\n  addValueAtIndex,\n  replaceValueAtIndex,\n  updateValueAtIndex,\n  removeValueAtIndex,\n  getTodoIndex,\n} from \"../utils\";\n\nexport function useTodos() {\n  // Set up a list of todos in state\n  const realmApp = useRealmApp();\n  const [todos, setTodos] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n\n  // Get a client object for the todo task collection\n  const taskCollection = useCollection({\n    cluster: dataSourceName,\n    db: \"todo\",\n    collection: \"Task\",\n  });\n\n  // Fetch all todos on load and whenever our collection changes (e.g. if the current user changes)\n  React.useEffect(() => {\n    taskCollection.find({}).then((fetchedTodos) => {\n      setTodos(fetchedTodos);\n      setLoading(false);\n    });\n  }, [taskCollection]);\n\n  // Use a MongoDB change stream to reactively update state when operations succeed\n  useWatch(taskCollection, {\n    onInsert: (change) => {\n      setTodos((oldTodos) => {\n        if (loading) {\n          return oldTodos;\n        }\n        const idx =\n          getTodoIndex(oldTodos, change.fullDocument) ?? oldTodos.length;\n        if (idx === oldTodos.length) {\n          return addValueAtIndex(oldTodos, idx, change.fullDocument);\n        } else {\n          return oldTodos;\n        }\n      });\n    },\n    onUpdate: (change) => {\n      setTodos((oldTodos) => {\n        if (loading) {\n          return oldTodos;\n        }\n        const idx = getTodoIndex(oldTodos, change.fullDocument);\n        return updateValueAtIndex(oldTodos, idx, () => {\n          return change.fullDocument;\n        });\n      });\n    },\n    onReplace: (change) => {\n      setTodos((oldTodos) => {\n        if (loading) {\n          return oldTodos;\n        }\n        const idx = getTodoIndex(oldTodos, change.fullDocument);\n        return replaceValueAtIndex(oldTodos, idx, change.fullDocument);\n      });\n    },\n    onDelete: (change) => {\n      setTodos((oldTodos) => {\n        if (loading) {\n          return oldTodos;\n        }\n        const idx = getTodoIndex(oldTodos, { _id: change.documentKey._id });\n        if (idx >= 0) {\n          return removeValueAtIndex(oldTodos, idx);\n        } else {\n          return oldTodos;\n        }\n      });\n    },\n  });\n\n  // Given a draft todo, format it and then insert it\n  const saveTodo = async (draftTodo) => {\n    if (draftTodo.summary) {\n      draftTodo._partition = realmApp.currentUser.id;\n      try {\n        await taskCollection.insertOne(draftTodo);\n      } catch (err) {\n        if (err.error.match(/^Duplicate key error/)) {\n          console.warn(\n            `The following error means that we tried to insert a todo multiple times (i.e. an existing todo has the same _id). In this app we just catch the error and move on. In your app, you might want to debounce the save input or implement an additional loading state to avoid sending the request in the first place.`\n          );\n        }\n        console.error(err);\n      }\n    }\n  };\n\n  // Toggle whether or not a given todo is complete\n  const toggleTodo = async (todo) => {\n    await taskCollection.updateOne(\n      { _id: todo._id },\n      { $set: { isComplete: !todo.isComplete } }\n    );\n  };\n\n  // Delete a given todo\n  const deleteTodo = async (todo) => {\n    await taskCollection.deleteOne({ _id: todo._id });\n  };\n\n  return {\n    loading,\n    todos,\n    saveTodo,\n    toggleTodo,\n    deleteTodo,\n  };\n}\n","import React from \"react\";\nimport { useRealmApp } from \"../components/RealmApp\";\n\n/**\n * Returns a MongoDB Collection client object\n * @template DocType extends Realm.Services.MongoDB.Document\n * @param {Object} config - A description of the collection.\n * @param {string} [config.cluster] - The service name of the collection's linked cluster.\n * @param {string} config.db - The name of database that contains the collection.\n * @param {string} config.collection - The name of the collection.\n * @returns {Realm.Services.MongoDB.MongoDBCollection<DocType>} config.collection - The name of the collection.\n */\nexport function useCollection({ cluster = \"mongodb-atlas\", db, collection }) {\n  const realmApp = useRealmApp();\n  return React.useMemo(() => {\n    const mdb = realmApp.currentUser.mongoClient(cluster);\n    return mdb.db(db).collection(collection);\n  }, [realmApp.currentUser, cluster, db, collection]);\n}\n","import React from \"react\";\nimport {\n  Checkbox,\n  IconButton,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n} from \"@material-ui/core\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nexport function TodoItem({ todo, todoActions }) {\n  return (\n    <ListItem>\n      <ListItemIcon>\n        <Checkbox\n          edge=\"start\"\n          color=\"primary\"\n          checked={todo.isComplete}\n          onClick={() => {\n            todoActions.toggleTodo(todo);\n          }}\n        />\n      </ListItemIcon>\n      <ListItemText>{todo.summary}</ListItemText>\n      <ListItemSecondaryAction>\n        <IconButton\n          edge=\"end\"\n          size=\"small\"\n          onClick={() => {\n            todoActions.deleteTodo(todo);\n          }}\n        >\n          <ClearIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n}\n","import React from \"react\";\nimport {\n  TextField,\n  Button,\n  IconButton,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  withStyles,\n} from \"@material-ui/core\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nconst ListItemWithTwoSecondaryActions = withStyles({\n  secondaryAction: {\n    paddingRight: \"120px\",\n  },\n})(ListItem);\n\nexport function DraftTodoItem({ todo, todoActions, draftTodoActions }) {\n  return (\n    <ListItemWithTwoSecondaryActions>\n      <ListItemText inset>\n        <TextField\n          style={{ width: \"100%\" }}\n          placeholder=\"What needs doing?\"\n          size=\"small\"\n          value={todo.summary}\n          onChange={(e) => {\n            draftTodoActions.setDraftTodoSummary(todo, e.target.value);\n          }}\n        />\n      </ListItemText>\n      <ListItemSecondaryAction>\n        <Button\n          variant=\"outlined\"\n          size=\"small\"\n          onClick={async () => {\n            await todoActions.saveTodo(todo);\n            draftTodoActions.deleteDraftTodo(todo);\n          }}\n        >\n          Save\n        </Button>\n        <IconButton\n          edge=\"end\"\n          size=\"small\"\n          onClick={() => {\n            draftTodoActions.deleteDraftTodo(todo);\n          }}\n        >\n          <ClearIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItemWithTwoSecondaryActions>\n  );\n}\n","import React from \"react\";\n\nexport function useTimeout(fn, ms) {\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      fn();\n    }, ms);\n    return () => clearTimeout(timeout);\n  }, [fn, ms]);\n}\n\nexport function useShowLoader(loading, delayMs) {\n  const [showLoader, setShowLoader] = React.useState(false);\n  useTimeout(() => {\n    if (loading) {\n      setShowLoader(true);\n    }\n  }, [delayMs]);\n  React.useEffect(() => {\n    if (!loading) {\n      setShowLoader(false);\n    }\n  }, [loading]);\n  return showLoader;\n}\n","import React from \"react\";\nimport {\n  Container,\n  Button,\n  Typography,\n  List,\n  LinearProgress,\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useTodos } from \"../hooks/useTodos\";\nimport { TodoItem } from \"./TodoItem\";\nimport { useDraftTodos } from \"../hooks/useDraftTodos\";\nimport { DraftTodoItem } from \"./DraftTodoItem\";\nimport { useShowLoader } from \"../hooks/util-hooks\";\nimport { MoreInfo } from \"./MoreInfo\";\n\nexport function TodoItemsPage() {\n  const { loading, todos, ...todoActions } = useTodos();\n  const { draftTodos, ...draftTodoActions } = useDraftTodos();\n  const showLoader = useShowLoader(loading, 200);\n  return (\n    <Container className=\"main-container\" maxWidth=\"sm\">\n      {loading ? (\n        showLoader ? (\n          <LinearProgress />\n        ) : null\n      ) : (\n        <div className=\"todo-items-container\">\n          <Typography component=\"p\" variant=\"h5\">\n            {`You have ${todos.length} To-Do Item${\n              todos.length === 1 ? \"\" : \"s\"\n            }`}\n          </Typography>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<AddIcon />}\n            onClick={() => draftTodoActions.createDraftTodo()}\n          >\n            Add To-Do\n          </Button>\n          <List style={{ width: \"100%\" }}>\n            {todos.map((todo) => (\n              <TodoItem\n                key={String(todo._id)}\n                todo={todo}\n                todoActions={todoActions}\n              />\n            ))}\n            {draftTodos.map((draft) => (\n              <DraftTodoItem\n                key={String(draft._id)}\n                todo={draft}\n                todoActions={todoActions}\n                draftTodoActions={draftTodoActions}\n              />\n            ))}\n          </List>\n        </div>\n      )}\n      <MoreInfo />\n    </Container>\n  );\n}\n","import React from \"react\";\nimport * as Realm from \"realm-web\";\n\nexport function useDraftTodos() {\n  const [drafts, setDrafts] = React.useState([]);\n\n  const createDraftTodo = () => {\n    const draftTodo = {\n      _id: new Realm.BSON.ObjectID(),\n      summary: \"\",\n      isComplete: false,\n    };\n    setDrafts((d) => [...d, draftTodo]);\n  };\n\n  const setDraftTodoSummary = (draft, summary) => {\n    setDrafts((oldDrafts) => {\n      const idx = oldDrafts.findIndex((d) => d._id === draft._id);\n      return [\n        ...oldDrafts.slice(0, idx),\n        { ...oldDrafts[idx], summary },\n        ...oldDrafts.slice(idx + 1),\n      ];\n    });\n  };\n\n  const deleteDraftTodo = (draft) => {\n    setDrafts((oldDrafts) => {\n      const idx = oldDrafts.findIndex((d) => d._id === draft._id);\n      return [...oldDrafts.slice(0, idx), ...oldDrafts.slice(idx + 1)];\n    });\n  };\n\n  return {\n    draftTodos: drafts,\n    createDraftTodo,\n    setDraftTodoSummary,\n    deleteDraftTodo,\n  };\n}\n","import { green, purple, orange, red } from \"@material-ui/core/colors\";\n\nexport const colors = {\n  green: {\n    ...green,\n    500: \"#09804C\",\n    A400: \"#B9EACD\",\n  },\n  purple: {\n    ...purple,\n    500: \"#6200EE\",\n    A400: \"#9795F9\",\n  },\n  orange,\n  red,\n};\n","import {\n  ThemeProvider as MuiThemeProvider,\n  createMuiTheme,\n} from \"@material-ui/core\";\nimport { colors } from \"../colors\";\n\nconst themeConfig = {\n  palette: {\n    primary: colors.green,\n    secondary: colors.green,\n  },\n}\n\nconst theme = createMuiTheme(themeConfig);\n\nexport function ThemeProvider({ children }) {\n  return <MuiThemeProvider theme={theme}>{children}</MuiThemeProvider>;\n}\n","import { AppBar, Toolbar, Button, Typography } from \"@material-ui/core\";\nimport { WelcomePage } from \"./WelcomePage\";\nimport { TodoItemsPage } from \"./TodoItemsPage\";\nimport { RealmAppProvider, useRealmApp } from \"./RealmApp\";\nimport { ThemeProvider } from \"./Theme\";\nimport { AppName } from \"./AppName\";\nimport { appId } from \"../realm.json\";\nimport \"./App.css\";\n\nexport default function AppWithRealm() {\n  return (\n    <ThemeProvider>\n      <RealmAppProvider appId={appId}>\n        <App />\n      </RealmAppProvider>\n    </ThemeProvider>\n  );\n}\n\nfunction App() {\n  const { currentUser, logOut } = useRealmApp();\n  return (\n    <div className=\"App\">\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <AppName />\n          {currentUser ? (\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={async () => {\n                await logOut();\n              }}\n            >\n              <Typography variant=\"button\">Log Out</Typography>\n            </Button>\n          ) : null}\n        </Toolbar>\n      </AppBar>\n      {currentUser ? <TodoItemsPage /> : <WelcomePage />}\n    </div>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}